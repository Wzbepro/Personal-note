1-静态方法只能访问静态成员变量
	实例方法可以访问静态和实例成员
	静态方法不能使用this

2-基类与派生类的关系：
	·基类是派生类的抽象（抽象派生类的公有属性）
	·派生类是对基类的扩展

3-在Java中多态性的体现：
	|-由方法重载实现的（编译时态）
	|-方法重写（动态联翩）

·编译时态：在编译阶段具体调用那个被重载的方法（根据参数）
·动态联翩：子类继承父类的属性

4-面向对象程序设计（Object-Oriented Programming）

三大核心：
	|-多态：重写、重载、父类引用指向子类引用
	|-封装：（属性（静态特征）和操作（动态特征）结合在一起构成一个独立的封装体）	

5-抽象：抽出事物的本质特征暂不考虑细节

6-类：具有共同特征的所有对象集合

7-抽象类说明符：
	abstract：修饰
		|-类：不可new
		|-方法：由集成子类实现
	public > protected >default > private

8-由static修饰的（类、方法、属性）——————>不属于任何具体对象（公共的存储单元）

9-静态代码块：{}
	1、静态代码只定义在类里面独立于任何方法
	2、静态代码块中的局部变量只在本块内有效
	3、在类加载时自动执行————>初始化对象
	4、静态代码块只能访问类的静态成员不允许访问非静态成员


